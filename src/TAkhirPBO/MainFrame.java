package TAkhirPBO;

import java.awt.HeadlessException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Fathir Maula. S/222011503/2KS4
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    // initialize frame, dan menampilkan panel awal (login panel)
    public MainFrame() {
        initComponents();
        try {
            // TODO add your handling code here:
            Database.getInstance().deleteCookies(); // setiap baru membuka aplikasi, cookies di database, dihapus
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        contentScrollPane.setViewportView(new LoginPanel(contentScrollPane));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        contentScrollPane = new javax.swing.JScrollPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        homeMenuItem = new javax.swing.JMenuItem();
        bridgeMenuItem = new javax.swing.JMenuItem();
        sbcMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        entriMenuItem = new javax.swing.JMenuItem();
        liatcariMenuItem = new javax.swing.JMenuItem();
        uploadMenu = new javax.swing.JMenu();
        logoutMenu = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistem Informasi SBC");
        setName("Sistem Informasi SBC"); // NOI18N

        jMenu1.setBorder(null);
        jMenu1.setText("Main");
        jMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu1.setIconTextGap(40);

        homeMenuItem.setText("Home");
        homeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(homeMenuItem);

        bridgeMenuItem.setText("Bridge");
        bridgeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bridgeMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(bridgeMenuItem);

        sbcMenuItem.setText("SBC");
        sbcMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sbcMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(sbcMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setBorder(null);
        jMenu2.setText("Database");
        jMenu2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu2.setIconTextGap(40);

        entriMenuItem.setText("Entri");
        entriMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entriMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(entriMenuItem);

        liatcariMenuItem.setText("Liat dan Cari");
        liatcariMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                liatcariMenuItemActionPerformed(evt);
            }
        });
        jMenu2.add(liatcariMenuItem);

        jMenuBar1.add(jMenu2);

        uploadMenu.setText("Upload");
        uploadMenu.setIconTextGap(40);
        uploadMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadMenuMouseClicked(evt);
            }
        });
        jMenuBar1.add(uploadMenu);

        logoutMenu.setBorder(null);
        logoutMenu.setText("LogOut");
        logoutMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutMenu.setIconTextGap(40);
        logoutMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMenuMouseClicked(evt);
            }
        });
        logoutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutMenuActionPerformed(evt);
            }
        });
        jMenuBar1.add(logoutMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(contentScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 954, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(contentScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //action untuk menu yang tersedia di header/di frame/bagian atas frame

    private void homeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeMenuItemActionPerformed
        // TODO add your handling code here:
        contentScrollPane.setViewportView(new HomePanel());
    }//GEN-LAST:event_homeMenuItemActionPerformed

    private void entriMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entriMenuItemActionPerformed
        // TODO add your handling code here:
        // pembatasan akses untuk id tertentu
        PreparedStatement ps;
        ResultSet rs;
        try {
            String sql = "SELECT * FROM cookies WHERE username='admin'";
            ps = myConnection.getConnection().prepareStatement(sql);
            rs = ps.executeQuery();
            if (rs.next()) {
                contentScrollPane.setViewportView(new EntryPanel());
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "Maaf, Menu tidak bisa diakses", "Kamu Bukan Admin:'", 2);
            }
        } catch (HeadlessException | SQLException e) {
            e.getMessage();
        }

    }//GEN-LAST:event_entriMenuItemActionPerformed


    private void bridgeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bridgeMenuItemActionPerformed
        // TODO add your handling code here:
        contentScrollPane.setViewportView(new BridgePanel());
    }//GEN-LAST:event_bridgeMenuItemActionPerformed

    private void sbcMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sbcMenuItemActionPerformed
        // TODO add your handling code here:
        contentScrollPane.setViewportView(new sbcPanel());
    }//GEN-LAST:event_sbcMenuItemActionPerformed

    private void liatcariMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_liatcariMenuItemActionPerformed
        // TODO add your handling code here:
        // pembatasan akses untuk id tertentu
        PreparedStatement ps;
        ResultSet rs;
        try {
            String sql = "SELECT * FROM cookies WHERE id= 1";
            ps = myConnection.getConnection().prepareStatement(sql);
            rs = ps.executeQuery();
            if (rs.next()) {
                contentScrollPane.setViewportView(new liatcariPanel());
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "Maaf, Menu tidak bisa diakses, daftar sbc dulu ;)", "Kamu Bukan Anggota SBC:'", 2);
            }
        } catch (HeadlessException | SQLException e) {
            e.getStackTrace();
        }
    }//GEN-LAST:event_liatcariMenuItemActionPerformed

    private void logoutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logoutMenuActionPerformed

    private void logoutMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMenuMouseClicked
        try {
            // TODO add your handling code here:
            Database.getInstance().deleteCookies(); // menghapus cookies setiap logout
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        contentScrollPane.setViewportView(new LoginPanel(contentScrollPane));
    }//GEN-LAST:event_logoutMenuMouseClicked

    private void uploadMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadMenuMouseClicked
        // TODO add your handling code here:
        // pembatasan akses untuk id tertentu
        PreparedStatement ps;
        ResultSet rs;
        try {
            String sql = "SELECT * FROM cookies WHERE id= 1";
            ps = myConnection.getConnection().prepareStatement(sql);
            rs = ps.executeQuery();
            if (rs.next()) {
                contentScrollPane.setViewportView(new DokumentasiPanel());
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "Maaf, Menu tidak bisa diakses, daftar sbc dulu ;)","kamu Bukan Anggota SBC:'", 2);
            }
        } catch (HeadlessException | SQLException e) {
            e.getMessage();
        }
    }//GEN-LAST:event_uploadMenuMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem bridgeMenuItem;
    private javax.swing.JScrollPane contentScrollPane;
    private javax.swing.JMenuItem entriMenuItem;
    private javax.swing.JMenuItem homeMenuItem;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem liatcariMenuItem;
    private javax.swing.JMenu logoutMenu;
    private javax.swing.JMenuItem sbcMenuItem;
    private javax.swing.JMenu uploadMenu;
    // End of variables declaration//GEN-END:variables
}
