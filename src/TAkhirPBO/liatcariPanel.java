package TAkhirPBO;

import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Fathir Maula. S/222011503/2KS4
 */
public class liatcariPanel extends javax.swing.JPanel {

    /**
     * Creates new form liatcariPanel
     */
    public liatcariPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tampilButton = new javax.swing.JButton();
        cariTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        provinsiComboBox = new javax.swing.JComboBox<>();
        filterButton = new javax.swing.JButton();
        lakiButton = new javax.swing.JButton();
        perempuanButton = new javax.swing.JButton();
        carinamaTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        mahasiswaTable = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 18)); // NOI18N
        jLabel1.setText("Tampil dan Cari Data Anggota SBC");

        tampilButton.setText("Tampilkan Tabel Lengkap");
        tampilButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tampilButtonActionPerformed(evt);
            }
        });

        cariTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cariTextFieldFocusLost(evt);
            }
        });
        cariTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariTextFieldActionPerformed(evt);
            }
        });
        cariTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cariTextFieldKeyReleased(evt);
            }
        });

        jLabel3.setText("Filter Tabel");

        provinsiComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jawa Tengah", "Kalimantan Tengah", "Sulawesi Tengah", "Banten", "Sulawesi Tenggara", "Aceh", "Bali", "Jakarta", "Jambi", "Maluku", "Gorontalo", "Kalimantan Utara", "Maluku Utara", "Sulawesi Utara", "Lampung", "Sumatera Utara", "Yogyakarta", "Papua", "Kepulauan Bangka Belitung", "Kepulauan Riau", "Bengkulu", "Riau", "Sumatera Barat", "Sulawesi Barat", "Jawa Barat", "Nusa Tenggara Barat", "Kalimantan Barat", "Papua Barat", "Jawa Timur", "Kalimantan Timur", "Nusa Tenggara Timur", "Kalimantan Selatan", "Sumatera Selatan", "Sulawesi Selatan", " " }));

        filterButton.setText("filter");
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        lakiButton.setText("Laki-laki");
        lakiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lakiButtonActionPerformed(evt);
            }
        });

        perempuanButton.setText("Perempuan");
        perempuanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perempuanButtonActionPerformed(evt);
            }
        });

        carinamaTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                carinamaTextFieldFocusLost(evt);
            }
        });
        carinamaTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                carinamaTextFieldKeyReleased(evt);
            }
        });

        jLabel2.setText("Cari NIM");

        jLabel4.setText("Cari Nama");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(provinsiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(cariTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lakiButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(perempuanButton))
                            .addComponent(tampilButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addComponent(carinamaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 82, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(tampilButton)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cariTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(carinamaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(provinsiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lakiButton)
                    .addComponent(perempuanButton))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        add(jPanel1, java.awt.BorderLayout.CENTER);

        mahasiswaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIM", "Nama", "Jenis Kelamin", "Kelas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mahasiswaTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mahasiswaTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(mahasiswaTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 495, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 304, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE))
        );

        add(jPanel2, java.awt.BorderLayout.LINE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void mahasiswaTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mahasiswaTableMouseClicked
        // TODO add your handling code here:
     
    }//GEN-LAST:event_mahasiswaTableMouseClicked

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)
        mahasiswaTable.getModel();
        //refresh tabel
        while(dtm.getRowCount()>0){
            dtm.removeRow(0);
        }
        //isi tabel
        try {
        //isi tabel
            for(Mahasiswa mhs: Database.getInstance().getFilterProvinsiMahasiswa(provinsiComboBox.getSelectedItem().toString())){
                dtm.addRow(new Object[]{mhs.getNim(),mhs.getNama(),mhs.getJenisKelamin(),mhs.getKelas()});
        }
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(this, "Gagal mengambil data", "Gagal", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_filterButtonActionPerformed

    private void cariTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cariTextFieldActionPerformed

    private void tampilButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tampilButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)
        mahasiswaTable.getModel();
        //refresh tabel
        while(dtm.getRowCount()>0){
            dtm.removeRow(0);
        }
        //isi tabel
        try {
        //isi tabel
            for(Mahasiswa mhs: Database.getInstance().getListMahasiswa()){
                dtm.addRow(new Object[]{mhs.getNim(),mhs.getNama(),mhs.getJenisKelamin(),mhs.getKelas()});
        }
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(this, "Gagal mengambil data", "Gagal", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tampilButtonActionPerformed

    private void cariTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cariTextFieldKeyReleased
        // TODO add your handling code here:
        String key=cariTextField.getText(); 
        DefaultTableModel dtm = (DefaultTableModel)
        mahasiswaTable.getModel();
        //refresh tabel
        while(dtm.getRowCount()>0){
            dtm.removeRow(0);
        }
        //isi tabel
        try {
        //isi tabel
            if(key!=""){
            for(Mahasiswa mhs: Database.getInstance().getFilterNimMahasiswa(key)){
                dtm.addRow(new Object[]{mhs.getNim(),mhs.getNama(),mhs.getJenisKelamin(),mhs.getKelas()});
        }}
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(this, "Gagal mengambil data", "Gagal", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cariTextFieldKeyReleased

    private void carinamaTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_carinamaTextFieldKeyReleased
        // TODO add your handling code here:
        String key=carinamaTextField.getText(); 
        DefaultTableModel dtm = (DefaultTableModel)
        mahasiswaTable.getModel();
        //refresh tabel
        while(dtm.getRowCount()>0){
            dtm.removeRow(0);
        }
        //isi tabel
        try {
        //isi tabel
            if(key!=""){
            for(Mahasiswa mhs: Database.getInstance().getFilterNamaMahasiswa(key)){
                dtm.addRow(new Object[]{mhs.getNim(),mhs.getNama(),mhs.getJenisKelamin(),mhs.getKelas()});
        }}
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(this, "Gagal mengambil data", "Gagal", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_carinamaTextFieldKeyReleased

    private void cariTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cariTextFieldFocusLost
        // TODO add your handling code here:
        cariTextField.setText("");
    }//GEN-LAST:event_cariTextFieldFocusLost

    private void carinamaTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_carinamaTextFieldFocusLost
        // TODO add your handling code here:
        carinamaTextField.setText("");
    }//GEN-LAST:event_carinamaTextFieldFocusLost

    private void lakiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lakiButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)
        mahasiswaTable.getModel();
        //refresh tabel
        while(dtm.getRowCount()>0){
            dtm.removeRow(0);
        }
        //isi tabel
        try {
        //isi tabel
            for(Mahasiswa mhs: Database.getInstance().getFilterJKMahasiswa("Laki-laki")){
                dtm.addRow(new Object[]{mhs.getNim(),mhs.getNama(),mhs.getJenisKelamin(),mhs.getKelas()});
        }
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(this, "Gagal mengambil data", "Gagal", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_lakiButtonActionPerformed

    private void perempuanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perempuanButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)
        mahasiswaTable.getModel();
        //refresh tabel
        while(dtm.getRowCount()>0){
            dtm.removeRow(0);
        }
        //isi tabel
        try {
        //isi tabel
            for(Mahasiswa mhs: Database.getInstance().getFilterJKMahasiswa("Perempuan")){
                dtm.addRow(new Object[]{mhs.getNim(),mhs.getNama(),mhs.getJenisKelamin(),mhs.getKelas()});
        }
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(this, "Gagal mengambil data", "Gagal", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_perempuanButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cariTextField;
    private javax.swing.JTextField carinamaTextField;
    private javax.swing.JButton filterButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton lakiButton;
    private javax.swing.JTable mahasiswaTable;
    private javax.swing.JButton perempuanButton;
    private javax.swing.JComboBox<String> provinsiComboBox;
    private javax.swing.JButton tampilButton;
    // End of variables declaration//GEN-END:variables
}
